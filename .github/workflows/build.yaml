on:
  push:
    branches:
      - development
      - feature/cicd

env:
  IMAGE_NAME: sigmaproductions/sigmachatclient

jobs:
  build:
    runs-on: [self-hosted, build]   
    steps:
    - name: Set build tag
      run: |
        echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${IMAGE_NAME}:${IMAGE_TAG}
      env:
        AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
        AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
        AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
        AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL}}
        AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
        AUTH0_SESSION_ABSOLUTE_DURATION: ${{ secrets.AUTH0_SESSION_ABSOLUTE_DURATION }}
        NEXT_PUBLIC_API_HUB: ${{ vars.NEXT_PUBLIC_API_HUB }}
        NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_UNTHINKABLE: ${{ vars.NEXT_PUBLIC_UNTHINKABLE }}
    - name: Publish the Docker image
      run: docker push ${IMAGE_NAME}:${IMAGE_TAG}
  deploy:
    needs: build
    runs-on: [self-hosted, deploy]
    steps:
    - name: Set build tag
      run: |
        echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Pull and deploy
      env:
        AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
        AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
        AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
        AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL}}
        AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
        AUTH0_SESSION_ABSOLUTE_DURATION: ${{ secrets.AUTH0_SESSION_ABSOLUTE_DURATION }}
        NEXT_PUBLIC_API_HUB: ${{ vars.NEXT_PUBLIC_API_HUB }}
        NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}
        NEXT_PUBLIC_UNTHINKABLE: ${{ vars.NEXT_PUBLIC_UNTHINKABLE }}
      run: docker-compose -f compose.prod.yaml pull &&
           docker-compose -f compose.prod.yaml up -d
      
